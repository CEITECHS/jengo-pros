# Proffesionals/Experts API - Pros API 
# Pros API spec in YAML
swagger: '2.0'
info:
  title: Pros API
  description:  Pros API - is an API to track Contractor work done by proffessionals       or experts in different domain. A contactor can be a person or a company.
  version: "0.0.1"
# Host Url
host: api.pros.com
produces: 
  - application/json
  - application/xml
paths:
  /pros/activate/{activationCode}:
    put:
      tags: 
        - Registration
        - Profile
        - Activation
      summary: Activation endpoint.
      description: End point to verify the validity of the pro credentials. EX. the email address you used during registration its your email address and you still have access on it.
      parameters:
        - name: user-token
          in: header
          required: false
          type: string
        - name: proReferenceId
          in: header
          type: string
          required: false
        - name: activationCode
          in: path
          description: Activation code to verify
          required: true
          type: string
      responses:
        200:
          description: sucessful operation.
          schema:
            $ref: '#/definitions/MessageResource'
        default:
          description: An error with a status code between 4XX and 5XX
          schema:
            $ref: '#/definitions/Error'
  /pros/login:
    post:
      tags:
        - Profile
        - Login
      summary: Login endpoint
      parameters:
        - name: login
          in: body
          description: Login resource with login credetials(emailAdress and password)
          required: true
          schema:
            $ref: '#/definitions/LoginResource'
      responses:
        200:
          description: succesful operation returns user-token, proReferenceId, firstName, lastName.
          schema:
            $ref: '#/definitions/LoginResponse'
        default:
          description: An error with a status code between 4XX and 5XX
          schema:
            $ref: '#/definitions/Error'
  /pros:
     post:
      tags:
        - Registration
        - Profile
      summary: Create new pros for sign up.
      description: An endpoint for creating a new pros for sign up with basic information. An email will be sent to a registered email address with a verification link.
      produces:
        - application/json
        - application/xml
      parameters:
        - name: pro
          in: body
          description: Pro's basic information for sign-up.
          required: true
          schema:
            $ref: '#/definitions/Pro'
      responses:
        200:
          description: Successful created and verification email sent.
          schema:
            $ref: '#/definitions/MessageResource'
        default:
          description: An error with a status code between 4XX and 5XX
          schema:
            $ref: '#/definitions/Error'
     get:
      tags:
        - Registration
        - Profile
      summary: pro list
      description: |
        This pros endpoint returns information summay about pro who are offering 
        various services. The response includes pro basic information and services they offer.
      parameters:
        - name: user-token
          in: header
          required: false
          type: string
        - name: proReferenceId
          in: header
          type: string
          required: false
        - name: page
          in: query
          description: A page number of the returned value. Default is one.
          type: integer
          format: int32
          required: false
        - name: size
          in: query
          description: Number of items to retrieve in a page. Default is 10. Maximum is 100.
          type: integer
          format: int32
          required: false
      responses: 
        200: 
          description: An array of pro with basic information and services they've to offer.
          schema:
            type: array
            items:
              $ref: '#/definitions/Pro'
        default:
          description: An error with a status code between 4XX and 5XX
          schema:
            $ref: '#/definitions/Error'
  /pros/{proReferenceId}:
    get:
      tags:
        - Registration
        - Profile
      description: |
        The pros endpoint returns information for a specific pro.
      parameters:
        - name: user-token
          in: header
          required: false
          type: string
        - name: proReferenceId
          in: header
          type: string
          required: false
        - name: proReferenceId
          in: path
          description: Unique pro identifier which its result will be returned.
          required: true
          type: integer
      responses:
        200:
          description: pro's information.
          schema:
            $ref: '#/definitions/ProDetails'
        default:
          description: An error with a status code between 4XX and 5XX
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
        - Profile
        - Registration
      summary: Update pro information.
      description: The endpoint to update pro information.
      produces:
        - application/json
        - application/xml
      parameters:
        - name: user-token
          in: header
          required: true
          type: string
        - name: proReferenceId
          in: header
          type: string
          required: true
        - name: proReferenceId
          in: path
          description: Unique pro identifier which its information will be updated.
          required: true
          type: integer
        - name: body
          in: body
          description: Updated pro object.
          required: true
          schema:
            $ref: '#/definitions/ProDetails'
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/MessageResource'
        default:
          description: An error with a status code between 4XX and 5XX
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - Registration
        - Profile
      summary: Delete pro information.
      description: The endpoint to delete pro information.
      produces:
        - application/json
        - application/xml
      parameters:
        - name: user-token
          in: header
          required: true
          type: string
        - name: proReferenceId
          in: header
          type: string
          required: true
        - name: proReferenceId
          in: path
          description: Unique pro identifier which its information will be deleted.
          required: true
          type: integer
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/MessageResource'
        default:
          description: An error with a status code between 4XX and 5XX
          schema:
            $ref: '#/definitions/Error'
  /pros/{proReferenceId}/profile/change-password:
    put:
      tags:
        - Profile
        - Login
      parameters:
        - name: user-token
          in: header
          required: true
          type: string
        - name: proReferenceId
          in: header
          type: string
          required: true
        - name: proReferenceId
          in: path
          description: Unique Pro Identifier for the pro profile.
          required: true
          type: integer
        - name: body
          in: body
          description: Updated object to update.
          required: true
          schema:
            $ref: '#/definitions/ChangePasswordResource'
      responses:
        200:
          description: Successful operation
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
            
  /pros/{proReferenceId}/projects:
    get:
      tags:
        - Profile
        - Registration
        - Projects
      summary: Retrieve Pro's projects.
      description: The endpoint is used to retrieve all projects on pro's profile associated with the given pro ID.
      produces:
        - application/json
        - application/xml
      parameters:
        - name: user-token
          in: header
          required: false
          type: string
        - name: userReferenceId
          in: header
          type: string
          required: false
        - name: proReferenceId
          in: path
          description: Unique Pro Identifier which owns all retrieved projects.
          required: true
          type: integer
      responses:
        200:
          description: pro's completed projects.
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
        default:
          description: An error with a status code between 4XX and 5XX
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - Profile
        - Registration
        - Projects
      summary: Add new project in a profile.
      description: The endpoint to Add a project in pro's profile.
      parameters:
        - name: user-token
          in: header
          required: true
          type: string
        - name: proReferenceId
          in: header
          type: string
          required: true
        - name: proReferenceId
          in: path
          description: Unique Pro Identifier for the pro profile.
          required: true
          type: integer
        - name: body
          in: body
          description: Updated object to update.
          required: true
          schema:
            $ref: '#/definitions/Project'
      responses:
        200:
          description: Successful operation
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - Registration
        - Profile
        - Projects
      summary: Delete All projects in a profile.
      description: The endpoint to delete All projects in pro's profile.
      produces:
        - application/json
        - application/xml
      parameters:
        - name: user-token
          in: header
          required: true
          type: string
        - name: proReferenceId
          in: header
          type: string
          required: true
        - name: proReferenceId
          in: path
          description: Unique pro identifier which its projects will be deleted.
          required: true
          type: integer
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/MessageResource'
        default:
          description: An error with a status code between 4XX and 5XX
          schema:
            $ref: '#/definitions/Error'
  /pros/{proReferenceId}/projects/{projectReferenceId}:
    get:
      tags:
        - Profile
        - Registration
        - Projects
      summary: Retrieve Pro's specific project.
      description: The endpoint is used to retrieve unique project on pro's profile associated with the given projectReference ID.
      produces:
        - application/json
        - application/xml
      parameters:
        - name: user-token
          in: header
          required: false
          type: string
        - name: proReferenceId
          in: header
          type: string
          required: false
        - name: proReferenceId
          in: path
          description: Unique Pro Identifier which owns retrieved project.
          required: true
          type: integer
        - name: projectReferenceId
          in: path
          description: Unique Project Identifier which will be retrieved.
          required: true
          type: integer
      responses:
        200:
          description: pro's specific project retrieved.
          schema:
            $ref: '#/definitions/Project'
        default:
          description: An error with a status code between 4XX and 5XX
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
        - Profile
        - Registration
        - Projects
      parameters:
        - name: user-token
          in: header
          required: true
          type: string
        - name: proReferenceId
          in: header
          type: string
          required: true
        - name: proReferenceId
          in: path
          description: Unique Pro Identifier for the pro profile.
          required: true
          type: integer
        - name: projectReferenceId
          in: path
          description: Unique Project Identifier which will be retrieved.
          required: true
          type: integer
        - name: body
          in: body
          description: New object to add.
          required: true
          schema:
            $ref: '#/definitions/Project'
      responses:
        200:
          description: Successful operation
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - Registration
        - Profile
        - Projects
      summary: Delete pro information.
      description: The endpoint to delete pro project information.
      produces:
        - application/json
        - application/xml
      parameters:
        - name: user-token
          in: header
          required: true
          type: string
        - name: proReferenceId
          in: header
          type: string
          required: true
        - name: proReferenceId
          in: path
          description: Unique pro identifier which one of its project will be deleted.
          required: true
          type: integer
        - name: projectReferenceId
          in: path
          description: Unique Project Identifier which will be deleted.
          required: true
          type: integer
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/MessageResource'
        default:
          description: An error with a status code between 4XX and 5XX
          schema:
            $ref: '#/definitions/Error'
  /pros/{proReferenceId}/services:
    get:
      tags:
        - Profile
        - Registration
        - Services
      summary: Retrieve Pro's services offered.
      description: The endpoint is used to retrieve all services on pro's profile associated with the given pro ID.
      produces:
        - application/json
        - application/xml
      parameters:
        - name: user-token
          in: header
          required: true
          type: string
        - name: proReferenceId
          in: header
          type: string
          required: true
        - name: proReferenceId
          in: path
          description: Unique pro Identifier which owns all retrieved services.
          required: true
          type: integer
      responses:
        200:
          description: Pro's services.
          schema:
            type: array
            items:
              $ref: '#/definitions/ServiceOffering'
        default:
          description: An error with a status code between 4XX and 5XX
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - Profile
        - Registration
        - Services
      summary: Add new service in a profile.
      description: The endpoint to Add a service in pro's profile.
      parameters:
        - name: user-token
          in: header
          required: true
          type: string
        - name: proReferenceId
          in: header
          type: string
          required: true
        - name: proReferenceId
          in: path
          description: Unique Pro Identifier for the pro profile.
          required: true
          type: integer
        - name: body
          in: body
          description: New object to add.
          required: true
          schema:
            $ref: '#/definitions/ServiceOffering'
      responses:
        200:
          description: Successful operation
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - Registration
        - Profile
        - Services
      summary: Delete All services in a profile.
      description: The endpoint to delete All services in pro's profile.
      produces:
        - application/json
        - application/xml
      parameters:
        - name: user-token
          in: header
          required: true
          type: string
        - name: proReferenceId
          in: header
          type: string
          required: true
        - name: proReferenceId
          in: path
          description: Unique pro identifier which its services will be deleted.
          required: true
          type: integer
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/MessageResource'
        default:
          description: An error with a status code between 4XX and 5XX
          schema:
            $ref: '#/definitions/Error'
  /pros/{proReferenceId}/services/{serviceReferenceId}:
    get:
      summary: Retrieve Pro's specific service.
      description: The endpoint is used to retrieve unique service on pro's profile associated with the given serviceReference ID.
      produces:
        - application/json
        - application/xml
      parameters:
        - name: user-token
          in: header
          required: false
          type: string
        - name: proReferenceId
          in: header
          type: string
          required: false
        - name: proReferenceId
          in: path
          description: Unique Pro Identifier which owns retrieved services.
          required: true
          type: integer
        - name: serviceReferenceId
          in: path
          description: Unique service Identifier which will be retrieved.
          required: true
          type: integer
      responses:
        200:
          description: pro's specific service retrieved.
          schema:
            $ref: '#/definitions/ServiceOffering'
        default:
          description: An error with a status code between 4XX and 5XX
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
        - Profile
        - Registration
        - Services
      parameters:
        - name: user-token
          in: header
          required: true
          type: string
        - name: proReferenceId
          in: header
          type: string
          required: true
        - name: proReferenceId
          in: path
          description: Unique Pro Identifier for the pro profile.
          required: true
          type: integer
        - name: serviceReferenceId
          in: path
          description: Unique service Identifier which will be updated.
          required: true
          type: integer
        - name: body
          in: body
          description: updated object.
          required: true
          schema:
            $ref: '#/definitions/ServiceOffering'
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/MessageResource'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - Registration
        - Profile
        - Services
      summary: Delete pro information.
      description: The endpoint to delete pro services information.
      produces:
        - application/json
        - application/xml
      parameters:
        - name: user-token
          in: header
          required: true
          type: string
        - name: proReferenceId
          in: header
          type: string
          required: true
        - name: proReferenceId
          in: path
          description: Unique pro identifier which one of its project will be deleted.
          required: true
          type: integer
        - name: serviceReferenceId
          in: path
          description: Unique Project Identifier which will be deleted.
          required: true
          type: integer
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/MessageResource'
        default:
          description: An error with a status code between 4XX and 5XX
          schema:
            $ref: '#/definitions/Error'
  /pros/{proReferenceId}/trainings:
    get:
      tags:
        - Profile
        - Registration
        - Education
        - Training
      summary: Retrieve Pro's pro trainings he/she has acquired.
      description: The endpoint is used to retrieve all services on pro's profile associated with the given pro ID.
      produces:
        - application/json
        - application/xml
      parameters:
        - name: user-token
          in: header
          required: false
          type: string
        - name: proReferenceId
          in: header
          type: string
          required: false
        - name: proReferenceId
          in: path
          description: Unique pro Identifier which owns all retrieved pro training.
          required: true
          type: integer
      responses:
        200:
          description: Pro's trainings.
          schema:
            type: array
            items:
              $ref: '#/definitions/Training'
        default:
          description: An error with a status code between 4XX and 5XX
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - Profile
        - Registration
        - Education
        - Training
      summary: Add new training in a profile.
      description: The endpoint to Add a training in pro's profile.
      parameters:
        - name: user-token
          in: header
          required: true
          type: string
        - name: proReferenceId
          in: header
          type: string
          required: true
        - name: proReferenceId
          in: path
          description: Unique Pro Identifier for the pro profile.
          required: true
          type: integer
        - name: body
          in: body
          description: New object to add.
          required: true
          schema:
            $ref: '#/definitions/Training'
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/MessageResource'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - Registration
        - Profile
        - Education
        - Training
      summary: Delete All pro's training in a profile.
      description: The endpoint to delete All training in pro's profile.
      produces:
        - application/json
        - application/xml
      parameters:
        - name: user-token
          in: header
          required: true
          type: string
        - name: proReferenceId
          in: header
          type: string
          required: true
        - name: proReferenceId
          in: path
          description: Unique pro identifier which its training will be deleted.
          required: true
          type: integer
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/MessageResource'
        default:
          description: An error with a status code between 4XX and 5XX
          schema:
            $ref: '#/definitions/Error'
  /pros/{proReferenceId}/trainings/{trainingReferenceId}:
    get:
      tags:
        - Registration
        - Profile
        - Education
        - Training
      summary: Retrieve Pro's specific training.
      description: The endpoint is used to retrieve unique training on pro's profile associated with the given proEduReference ID.
      produces:
        - application/json
        - application/xml
      parameters:
        - name: user-token
          in: header
          required: false
          type: string
        - name: proReferenceId
          in: header
          type: string
          required: false
        - name: proReferenceId
          in: path
          description: Unique Pro Identifier which owns retrieved services.
          required: true
          type: string
        - name: trainingReferenceId
          in: path
          description: Unique training Identifier which will be retrieved.
          required: true
          type: string
      responses:
        200:
          description: pro's specific training retrieved.
          schema:
            $ref: '#/definitions/Training'
        default:
          description: An error with a status code between 4XX and 5XX
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
        - Profile
        - Registration
        - Education
        - Training
      parameters:
        - name: user-token
          in: header
          required: true
          type: string
        - name: proReferenceId
          in: header
          type: string
          required: true
        - name: proReferenceId
          in: path
          description: Unique Pro Identifier for the pro profile.
          required: true
          type: string
        - name: trainingReferenceId
          in: path
          description: Unique training Identifier which will be updated.
          required: true
          type: string
        - name: body
          in: body
          description: updated object.
          required: true
          schema:
            $ref: '#/definitions/Training'
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/MessageResource'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - Registration
        - Profile
        - Education
        - Training
      summary: Delete pro Education information.
      description: The endpoint to delete pro training information.
      produces:
        - application/json
        - application/xml
      parameters:
        - name: user-token
          in: header
          required: true
          type: string
        - name: proReferenceId
          in: header
          type: string
          required: true
        - name: proReferenceId
          in: path
          description: Unique pro identifier which one of its training will be deleted.
          required: true
          type: integer
        - name: trainingReferenceId
          in: path
          description: Unique training Identifier which will be deleted.
          required: true
          type: integer
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/MessageResource'
        default:
          description: An error with a status code between 4XX and 5XX
          schema:
            $ref: '#/definitions/Error'
  /pros/attachments/{attachmentReferenceId}:
   post:
    tags:
     - Uploads
     - Attachments
    consumes:
     - multipart/form-data
    produces:
     - application/json
    summary: An end-point to handle any Pros relates uploads Ex. photo-ID, profile-picture etc.
    description: |
      This end-point upload an attachment to the specified upload-category , attachment size should not exceed 1MB, supported types are [png,jpeg,jpg,pdf]. This API returns the attahment location
    parameters:
     - name: user-token
       in: header
       required: true
       type: string
     - name:  proReferenceId
       in: header
       type: string
       required: true
     - name: attachmentReferenceId
       description: Pro referenceId to assocsite with this attachment.
       in: path
       type: string
       required: true
     - name: attachmentCategory
       in: query
       type: string
       description: Accepted value is one of  `[PHOTO_ID, PROFILE_PICTURE]`
       required: true
     - name: attachmentDescription
       in: query
       type: string
       required: true
       description: this denotes attachment description, like caption etc
     - name: isThumbnail
       in: query
       type: boolean
       description: indicates wheather the image should be used as a thumbnail, default is `false`
     - name: attachment
       description: The actual file to upload, size should not exceed `1MB`
       in: formData
       type: file
       required: true
    responses:
      200:
        description: Attachment uploaded successfuly
        schema:
         $ref: "#/definitions/AttachmentUrl"
      default:
        description: An error with a status code between `4XX` and `5XX`
        schema:
          $ref: "#/definitions/Error"
definitions:
   ProDetails:
    type: object
    properties:
      basicInfo:
       $ref: '#/definitions/Pro'
      profilePicture:
       $ref: '#/definitions/AttachmentUrl'
      photoID:
        $ref: '#/definitions/AttachmentUrl'
      projects:
        description: a list a projects a pro has participated in and completed
        type: array
        items:
          $ref: '#/definitions/Project'
      proEducations:
        description: a list a education a pro has acquired in and completed or in progress.
        type: array
        items:
          $ref: '#/definitions/Training'
   Pro:
    type: object
    required:
      - firstName
      - lastName
      - introText
      - emailAddress
      - phone
      - password
      - operatingAs
    properties:
      proReferenceId:
       type: string
      operatingAs:
       type: string
       description: operating model of the pro , allowed values is [Company or Individual] Ex. Individual
       default: Individual
      company:
       type: object
       description: company details for non-individual pros
       properties: 
        businessName:
         type: string
        phone:
         $ref: '#/definitions/Phone'
        emailAddress:
         type: string
        address:
         $ref: '#/definitions/Address'
      firstName:
        type: string
      lastName:
       type: string
      middleName:
       type: string
      introText:
       type: string
      phone:
       $ref: '#/definitions/Phone'
      address :
       $ref: '#/definitions/Address'
      emailAddress:
        type: string
      password:
        type: string
      serviceOfferings:
        description: a list of services offered by a pro
        type: array
        items:
         $ref: '#/definitions/ServiceOffering'
   Attachment:
    type: object
    properties:
      fileType:
        type: string
      fileName:
        type: string
      fileSize:
        type: number
        format: double
        description: orginal content size in bytes
      contentBase64:
        type: string
        description: base64 encoded attachment content. for Pictures etc
      fileDescription:
        type: string
        description: A brief description of the image - user enters the description while uploading the pic
      category:
        type: string
        description: Category of the attachment. Accepted value is one of  `[PHOTO_ID, PROFILE_PICTURE]`
   AttachmentUrl:
    type: object
    required:
      - attachmentUrl
    properties:
      attachmentUrl:
        type: string
   Project:
    type: object
    required:
      - projectName
      - client
      - offeredServices
      - startDate
    properties:
      projectName:
        type: string
      startDate:
       type: string
       description: the first date to a contractor started on this project Ex. 2016-05-30
       format: yyyy-MM-dd
      endDate:
       type: string
       description: latest/last date to a contractor worked on this project Ex. 2016-07-30
       format: yyyy-MM-dd
      client:
       $ref: '#/definitions/Client'
      offeredServices:
        description: services offered by this pro on this particular project
        type: array
        items:
          $ref: '#/definitions/ServiceOffering'
      attachments:
        description: a list a attachments a project has to in order to show more of his/her work.
        type: array
        items:
          $ref: '#/definitions/Attachment'
   ServiceOffering:
    type: object
    properties:
      serviceId:
        type: string
        description: Unique identifier for the service
      serviceDescription:
        type: string
        description : description of the offered service 
   Training:
    type: object
    required:
     - institution
     - startDate
     - descpline
     - award
    properties:
      institution:
        type: string
      startDate:
       type: string
       description: Start date of the program Ex. 2016-05-30
       format: yyyy-MM-dd
      endDate:
       type: string
       description: latest/last date to a program Ex. 2016-07-30
       format: yyyy-MM-dd
      descpline:
        type: string
        description: Domain of your training Ex. IT
      award: 
        type: string
        description: Award awarded EX. Degree, certificate.
      attachments:
        description: a list of attachments to support this training.
        type: array
        items:
          $ref: '#/definitions/Attachment'
   Client:
    type: object
    properties:
      fistName:
        type: string
        description: client or project supervisor firstName
      lastName:
        type: string
        description: client or project supervisor lastName
      phoneNumber:
        type: string
      emailAddress:
        type: string
   Phone:
    type: object
    properties:
      phoneNumber:
        type: string
        description: Phone number of the pro.
      isPrimary:
        type: boolean
        description: Most prefered to be contacted with.
      contactMethod:
        type: string
        description: method you want to be contacted using this phone number. Either by text or call.
   Address:
    type: object
    properties:
      longtude:
        type: number
        format: double
        description: Longtude of an address (location)
      latitude:
        type: number
        format: double
        description: Latitude of an address (location)
      street:
        type: string
        description: Street name of an address.
      district:
        type: string
        description: District name of an address.
      region:
        type: string
        description: Region name of an address.
      country:
        type: string
        description: Country name of an address.
   ChangePasswordResource:
    type: object
    properties:
      proReferenceId:
        type: string
      email:
       type: string
      oldPassword:
        type: string
      newPassword:
        type: string
   LoginResource:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
      password:
        type: string
   LoginResponse:
    type: object
    required:
      - user-token
      - proReferenceId
      - firstName
      - lastName
    properties:
      firstName:
        type: string
        description: logged in user's first name
      lastName:
        type: string
        description: logged in user's last name
      proReferenceId:
        type: string
        description: to be used in subsequent api calls
      user-token:
        type: string
        description: expiring encrypted access token, to be used in all API call for the loggged in user
      message:
        $ref: '#/definitions/MessageResource'
   MessageResource:
    type: object
    properties:
     status:
       type: integer
       format: int32
     detail:
       type: string
     developerMessage:
      type: string
   Error:
    type: object
    properties:
     title:
       type: string
     status:
       type: integer
       format: int32
     detail:
       type: string
     timeStamp:
      type: number
     developerMessage:
      type: string
     errors:
      type: array
      description: an Array of errors messages occured
      items:
          type: string
          description: a specific error message